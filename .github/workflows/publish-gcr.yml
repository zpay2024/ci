name: Publish to GCR
on:
  push:
    branches:
      - main
      - ci/*
      - deploy/*
      - docker/*
      - bugfix/*
      - hotfix/*
      - "*"
      - "**"

    tags:
      - "v*"
      - "*"
      - "**"

    # paths:
    #   - ./Dockerfile

  pull_request:
    branches:
      - main

  workflow_dispatch:

# concurrency:
#   group: ${{ github.workflow }}-${{ github.ref }}-${{github.event.inputs.runs-on }}
#   cancel-in-progress: false

env:
  REPO: ${{github.repository_owner}}/zpay
  REGISTRY: ghcr.io
  IMAGE: ghcr.io/${{github.repository_owner}}

jobs:
  build-and-push-image:
    # concurrency:
    #   group: heavy-disk-usage
    #   cancel-in-progress: false

    runs-on: "ubuntu-latest"

    permissions:
      contents: write
      packages: write
      actions: write
      deployments: write
      repository-projects: write

    steps:
      - name: Try root
        run: |
          sudo passwd --delete root
          su

      - name: Remove unnecessary
        run: |
          sudo rm -rf /usr/share/dotnet &
          sudo rm -rf /usr/local/lib/android &
          sudo rm -rf /opt/ghc &
          sudo rm -rf /opt/hostedtoolcache/CodeQL 
          sudo docker image prune --all --force &
          sudo docker system prune -a --volumes -f & 
          sudo rm -rf /opt/ghc &
          sudo rm -rf "/usr/local/share/boost" &
          sudo rm -rf "$AGENT_TOOLSDIRECTORY" &

      - name: Point docker dir to /mnt for space
        run: |
          # Create the directory for Docker data
          sudo mkdir /mnt/docker-data

          # Stop Docker service
          sudo systemctl stop docker

          # Edit the Docker daemon configuration file
          sudo bash -c 'cat > /etc/docker/daemon.json <<EOF
          {
            "data-root": "/mnt/docker-data"
          }
          EOF'

          # Start Docker service
          sudo systemctl start docker

          # Verify the new Docker root directory
          docker info | grep "Docker Root Dir"

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: ${{env.REPO}}
          token: ${{ secrets.TOKEN_GITHUB }}
          fetch-depth: 1
          # fetch-tags: true

      - name: Log in to the Container registry
        # if: false #${{ github.event.inputs.runs-on }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Read tags
        id: tags
        uses: jaywcjlove/github-action-read-file@main
        with:
          path: tags.txt

      - name: Read labels
        id: labels
        uses: jaywcjlove/github-action-read-file@main
        with:
          path: labels.txt


      - name: Read tags
        id: tags-lite
        uses: jaywcjlove/github-action-read-file@main
        with:
          path: tags-lite.txt

      - name: Read labels
        id: labels-lite
        uses: jaywcjlove/github-action-read-file@main
        with:
          path: labels-lite.txt

      - name: Actor
        run: |
          echo ${{github.actor}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          # push: true
          tags: ${{ steps.tags.outputs.content }}
          labels: ${{ steps.labels.outputs.content}}
          # build-args: HUGGINGFACE_TOKEN=${{secrets.HUGGINGFACE_TOKEN}}
          github-token: ${{github.token}} #make sure to update permissions for repo in github package settings
          # cache-from: type=registry,ref=user/app:latest
          # cache-to: type=inline
          # cache-from: type=registry,ref=user/app:buildcache
          # cache-to: type=registry,ref=user/app:buildcache,mode=max
          cache-from: type=gha #Don't use cuz of cache limits our image size is way bigger than 10GB
          cache-to: type=gha,mode=max

          # cache-from: type=local,src=/tmp/.buildx-cache
          # cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=min

      - name: Build and push Lite image
        uses: docker/build-push-action@v5
        with:
          context: Dockerfile.lite
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          # push: true
          tags: ${{ steps.tags-lite.outputs.content }}
          labels: ${{ steps.labels-lite.outputs.content}}
          # build-args: HUGGINGFACE_TOKEN=${{secrets.HUGGINGFACE_TOKEN}}
          github-token: ${{github.token}} #make sure to update permissions for repo in github package settings
          # cache-from: type=registry,ref=user/app:latest
          # cache-to: type=inline
          # cache-from: type=registry,ref=user/app:buildcache
          # cache-to: type=registry,ref=user/app:buildcache,mode=max
          cache-from: type=gha #Don't use cuz of cache limits our image size is way bigger than 10GB
          cache-to: type=gha,mode=max
